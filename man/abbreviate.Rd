% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/abbreviate.R
\name{abbreviate}
\alias{abbreviate}
\title{Abbreviate strings or tokens}
\usage{
abbreviate(string, dict = getOption("abbreviations", abbreviations),
  tokenizer = NULL)
}
\arguments{
\item{string}{character; string to attempt to abbreviate}

\item{dict}{dictionary-like object; uses global options
'confirm.abbreviations' or else the \code{\link{abbreviations}}}

\item{tokenizer}{character; pattern passed to
\code{\link[stringr]{str_split}} to split strings with, usually \code{'_'}
or \code{' '}. If \code{NULL}, the default, strings will not be split.}
}
\value{
character; string with elements matching \code{dict} replaced
}
\description{
Abbreviates strings by (optionally) tokenizing and matching token
against a dictionary
}
\details{
\code{abbreviate} works by first finding a list of tokens that occur in the
code.

x can be adorned with match modifiers to control the type of match. See
\code{\link{lookup}} for details.

If there is no matching entry for the token in the dictinary, no
substitution is used.
}
\examples{
string <- c( 'foo bar', 'foo amount', 'amount', 'amount count date' )

  # Attempts to abreviate entire string
  abbreviate(string)

  # Tokenizes sting and matches against the token
  abbreviate(string, tokenizer=" ")

  abbreviate( c('product_year', "dollar_range"), abbreviations, tokenizer = '_')
}
\seealso{
\code{\link{lookup}} \cr
  \code{\link{abbreviations}} \cr
  \code{\link[stringr]{str_split}}
}

